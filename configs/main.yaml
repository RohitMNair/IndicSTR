backbone: focalnet
ckpt_path: null
defaults:
  - model: focalnet
  - _self_

model:
  img_size: 64

Img2Vec:
  _target_: model.Img2Vec.Img2Vec
  character_classes: ['अ', 'आ', 'इ', 'ई', 'उ', 'ऊ', 'ऋ', 'ॠ', 'ए', 'ऐ',
                      'ओ', 'औ', 'ॲ', 'ऍ', 'ऑ',
                      'क', 'ख', 'ग', 'घ', 'ङ',
                      'च', 'छ', 'ज', 'झ', 'ञ',
                      'ट', 'ठ', 'ड', 'ढ', 'ण',
                      'त', 'थ', 'द', 'ध', 'न',
                      'प', 'फ', 'ब', 'भ', 'म',
                      'य', 'र', 'ल', 'ळ', 'व', 'श',
                      'ष', 'स', 'ह',
                      #'क़', 'ख़', 'ग़', 'ज़', 'झ़', 'ड़', 'ढ़', 'फ़' # these will be handled by the matra '़'
                      # For real text, each of these will be converted to vyanjan + matra
                      'ॐ', '₹', '।', '!', '$', '₹', '%', '॥','ॽ', # characters that occur independently
                      '०','१','२','३','४','५','६' ,'७' ,'८' ,'९',
                      ]

  diacritic_classes: ['ा','ि','ी','ु','ू','ृ', 'े','ै', 'ो', 'ौ', 'ॅ', 'ॉ', 'ँ','ं', 'ः', '़'] # ensure that halfer is not in this
    
  half_character_classes: [ 'क', 'ख', 'ग', 'घ', 'ङ',
                            'च', 'छ', 'ज', 'झ', 'ञ',
                            'ट', 'ठ', 'ड', 'ढ', 'ण',
                            'त', 'थ', 'द', 'ध', 'न',
                            'प', 'फ', 'ब', 'भ', 'म',
                            'य', 'र', 'ल', 'ळ', 'व', 'श',
                            'ष', 'स', 'ह']
  optimizer:
    _partial_: true
    _target_: torch.optim.Adam
  lr: 1e-4
  weight_decay: 0.01
  threshold: 0.5
  backbone: ${model}
  rep_dim: 2048
  activation:
    _target_: torch.nn.GELU
    
transforms:
  rotation: 90
  img_size: ${model.img_size}
  
datamodule:
  _target_: data.module.DevanagariDataModule
  charset: ${Img2Vec.character_classes}
  diacritics: ${Img2Vec.diacritic_classes}
  halfer: '्'
  half_charset: ${Img2Vec.half_character_classes}
  train_img_dir: /home/rohitn/D1/HindiGlyphSynth/glyph_train1
  train_gt: /home/rohitn/D1/HindiGlyphSynth/glyph_train1/gt.txt
  val_img_dir: /home/rohitn/D1/HindiGlyphSynth/glyph_val
  val_gt: /home/rohitn/D1/HindiGlyphSynth/glyph_val/gt.txt
  test_img_dir: null
  test_gt: null
  delimiter: "\t"
  batch_size: 256
  num_workers: 16

csv_logger:
  _target_: lightning.pytorch.loggers.CSVLogger
  save_dir: /global/D1/homes/rohitn/Hindi_embed_logs # Do not put "/" at the end
  name: Img2Vec_${backbone}
  # version: 69896/train3
  version: ${oc.env:SLURM_JOB_ID} # using SLURM Job Id which is obtained in the train script
  # version: 2023-11-21/08-12-47/matra_train # specify a sub-folder if finetuning

tensorboard_logger:
  _target_: lightning.pytorch.loggers.TensorBoardLogger
  save_dir:  ${csv_logger.save_dir}
  name: ${csv_logger.name}
  version: ${csv_logger.version}

model_checkpoint:
  _target_: lightning.pytorch.callbacks.ModelCheckpoint
  dirpath: ${csv_logger.save_dir}/${csv_logger.name}/${csv_logger.version}/checkpoints/      
  filename: "{epoch}-{val_loss:.2f}-{val_acc:.2f}"
  monitor: val_acc
  mode: max
  save_top_k: 3
  save_last: true
  
early_stopping:
  _target_: lightning.pytorch.callbacks.early_stopping.EarlyStopping
  monitor: train_loss_epoch
  mode: min
  min_delta: 0.1
  patience: 1
  verbose: true
  check_finite: true

training:
  _target_: lightning.pytorch.Trainer
  accelerator: gpu # options are cpu or gpu
  strategy: auto # only use when gpu is available
  devices: 1
  max_epochs: 10
  check_val_every_n_epoch: 1
  gradient_clip_val: 10
  precision: 32-true
  log_every_n_steps: 5

hydra:
  run:
    dir: ${csv_logger.save_dir}/${csv_logger.name}/${csv_logger.version}
